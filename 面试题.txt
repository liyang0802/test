1、简述hdfs的体系结构

HDFS是一个主/从(Master/slave)体系结构，可以通过目录路径对文件系统执行CRUD操作。
HDFS集群拥有一个NameNode和一些DataNode。NameNode管理文件系统的元数据，DataNode
存储实际的数据。客户端通过同NameNode和DataNode的交互访问文件系统。客户端联系
NameNode以获取文件的元数据，而真正的文件I/O操作是直接和DataNode进行交互的。

2、HDFS读写数据的过程？

（1）namenode通信请求上传文件，namenode检查目标文件是否已存在
（2）namenode返回是否可以上传 
（3）client会先对文件进行切分，请求第一个 block该传输到哪些datanode服务器上 
（4）namenode返回datanode的服务器 
（5）client请求一台datanode上传数据
（6）client开始往A上传第一个block
（7）当一个block传输完成之后，client再次请求namenode上传第二个block的服务器

3、谈谈你对GC的了解

GC就是垃圾回收，在Java中开发人员无法使用指针来自由的管理内存，GC是JVM对内存进行管理的方式，
GC使得Java开发人员摆脱了繁琐的内存管理工作，让程序的开发更有效率。

4、宽依赖和窄依赖怎么理解?

宽依赖：指父RDD的每个分区都可能被子RDD分区所使用，子RDD分区通常对应所有的父RDD分区，与数据规模有关
窄依赖：指父RDD的每个分区只被子RDD的一个分区所使用，子RDD分区通常对应常数个父RDD分区，与数据规模无关

5、什么是数据倾斜及数据倾斜是怎么产生的

数据倾斜就是我们在计算数据的过程中，数据的分散度不够，导致大量的数据都集中到一台或者多台机器上计算，
致使这些数据的计算速度远远小于平均的计算速度。产生的原因往往是因为key分布不均匀，建表时考虑不周，
还有就是某些sql语句自身就存在数据倾斜	

6、介绍JAVA8新特性

（1）lambda表达式：允许函数当做参数传递给某个方法
（2）接口的默认方法和静态方法
（3）方法的引用：可以直接引用现存的方法
（4）重复注释：允许在同一个地方多次使用一个注释
（5）更好的类型推断

7、Spark 中的 RDD 是什么，有哪些特性，常见的函数有哪些。

RDD是只读的、分区记录的集合
特性：
（1）一系列的分片
（2）每个分片上都有一个函数去迭代
（3）转换之间相互的依赖，后者依赖前者
（4）对key-value可以指定一个分区，常用的有hash，range
（5）数据本地性

8、Spark 性能优化主要有哪些方式，至少从四个方面举例说明

（1）开发调优：RDD方法
（2）数据倾斜调优
（2）资源调优
（4）shuffle调优

9、下列哪项通常是集群的最主要瓶颈。B
	A、CPU  B、磁盘 IO   C、网络  D、内存

10、你们公司有多少台机器，一天有多少增量数据？

开发集群10台


11、什么是单列模式？怎么定义一个类为单列模式？

单例模式就是保证一个对象在类中的唯一性
步骤：
（1）私有化构造方法
（2）通过new在本类中创建一个本类对象。
（3）定义一个共有的方法，将创建的对象返回

12、外部表与内部表的区别

外部表：在创建表时会记录数据所在的路径，删除时只删除元数据不删除数据
内部表：在创建表时数据会移动到指定的路径，删除时会将元数据和数据都删除
外部表相对于内部表来说更加的安全，方便数据共享。

13、Redis数据类型有哪几种

有5中
字符串string
列表list
集合set
有序集合sorted set
散列hash

14、接口和抽象类的区别

相同点：
都是不断抽取出来的概念
不同点：
（1）抽象类可以定义非抽象方法，供子类直接使用；接口中的方法都是抽象方法，接口中的成员都有固定的修饰符
（2）抽象类体现的是继承关系，一个类只能单继承；接口体现的是实现关系，一个类可以多实现
（3）抽象是继承，是is  a的关系；接口是实现是like a的关系。

15、spark广播变量存在哪里？作用？

在各个Executor的task上
作用：可以让变量产生的副本大大减少

16、GroupByKey 和reduceByKey的区别

reduceByKey用于对每个key对应的多个value进行merge操作，它能够在本地先进行merge操作，并且merge操作可以通过函数自定义。
GroupByKey也是对每个key进行操作，但只生成一个sequence。

17、ArrayList和LinkedList区别，以及分别在什么情况下使用

ArrayList底层的实现是数组，所以用下标访问的速度比较快，但是插入和删除元素，会有移动元素的开销，所以速度比LinkedList差。
LikedList底层是链表实现的，所以插入和删除元素时间复杂度较LinkedList好，但是随即访问需要遍历元素，所以效率比ArrayList差。
频繁的插入和删除元素，这个时候考虑使用LinkedList

18、SQL方面的优化，慢查询的优化




19、spark中cache和persist的区别

cache只有一个默认的缓存级别MEMORY_ONLY ，而persist可以根据情况设置其它的缓存级别。

20、spark 作业提交流程是怎么样的，client和 cluster 有什么区别，各有什么作用
